# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-08-31 18:51
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('event', models.CharField(choices=[('50 free', '50 Freestyle'), ('100 free', '100 Freestyle'), ('200 free', '200 Freestyle'), ('500 free', '500 Freestyle'), ('1000 free', '1000 Freestyle'), ('50 back', '50 Backstroke'), ('100 back', '100 Backstroke'), ('200 back', '200 Backstroke'), ('50 breast', '50 Breaststroke'), ('100 breast', '100 Breaststroke'), ('200 breast', '200 Breaststroke'), ('50 fly', '50 Butterfly'), ('100 fly', '100 Butterfly'), ('200 fly', '200 Butterfly'), ('100 im', '100 IM'), ('200 im', '200 IM'), ('400 im', '400 IM'), ('base free', 'Freestyle Base'), ('base back', 'Backstroke Base'), ('base breast', 'Breaststroke Base'), ('base fly', 'Butterfly Base'), ('base IM', 'IM Base')], max_length=10)),
                ('time', models.DurationField()),
                ('place', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(null=True)),
            ],
            options={
                'ordering': ['event', 'time'],
            },
        ),
        migrations.CreateModel(
            name='Interval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DurationField()),
            ],
            options={
                'ordering': ['swimmer', 'rep', 'time'],
            },
        ),
        migrations.CreateModel(
            name='Practice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
            ],
            options={
                'ordering': ['week_id'],
            },
        ),
        migrations.CreateModel(
            name='Rep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.IntegerField()),
                ('distance', models.IntegerField()),
                ('stroke', models.CharField(choices=[('fly', 'Butterfly'), ('back', 'Backstroke'), ('breast', 'Breaststroke'), ('free', 'Freestyle'), ('IM', 'IM')], max_length=6)),
                ('rest', models.DurationField(blank=True, null=True)),
                ('comments', models.CharField(blank=True, max_length=254)),
            ],
            options={
                'ordering': ['set_id', 'stroke'],
            },
        ),
        migrations.CreateModel(
            name='Set',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(choices=[('team', 'Team'), ('ind', 'Individuals')], max_length=25, null=True)),
                ('focus', models.CharField(choices=[('warmup', 'Warmup'), ('technique', 'Technique'), ('kick', 'Kick'), ('sprint', 'Sprint'), ('mid-distance', 'Mid Distance'), ('distance', 'Distance'), ('race', 'Race'), ('cooldown', 'Cooldown')], max_length=15)),
                ('repeats', models.IntegerField(blank=True, null=True)),
                ('order', models.IntegerField(null=True)),
                ('pace', models.CharField(choices=[('train', 'Base training pace'), ('race', '100 race pace')], max_length=10, null=True)),
                ('practice_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.Practice')),
            ],
            options={
                'ordering': ['practice_id', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Swimmer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_name', models.CharField(max_length=25)),
                ('l_name', models.CharField(max_length=25)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('bio', models.TextField(blank=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to=b'')),
            ],
            options={
                'ordering': ['l_name', 'f_name'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('abbr', models.CharField(max_length=5)),
                ('region', models.CharField(blank=True, max_length=25)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TrainingModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.Team')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingMultiplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('focus', models.CharField(choices=[('warmup', 'Warmup'), ('technique', 'Technique'), ('kick', 'Kick'), ('sprint', 'Sprint'), ('mid-distance', 'Mid Distance'), ('distance', 'Distance'), ('race', 'Race'), ('cooldown', 'Cooldown')], max_length=15)),
                ('multiplier', models.CharField(max_length=5, null=True)),
                ('training_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.TrainingModel')),
            ],
            options={
                'ordering': ['training_model', 'focus'],
            },
        ),
        migrations.CreateModel(
            name='Week',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monday', models.DateField(null=True)),
                ('tuesday', models.DateField(null=True)),
                ('wednesday', models.DateField(null=True)),
                ('thursday', models.DateField(null=True)),
                ('friday', models.DateField(null=True)),
                ('saturday', models.DateField(null=True)),
                ('sunday', models.DateField(null=True)),
                ('present', models.BooleanField()),
            ],
        ),
        migrations.AddField(
            model_name='swimmer',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.Team'),
        ),
        migrations.AddField(
            model_name='set',
            name='swimmers',
            field=models.ManyToManyField(blank=True, to='teams.Swimmer'),
        ),
        migrations.AddField(
            model_name='rep',
            name='set_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.Set'),
        ),
        migrations.AddField(
            model_name='practice',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='teams.Team'),
        ),
        migrations.AddField(
            model_name='practice',
            name='week_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='teams.Week'),
        ),
        migrations.AddField(
            model_name='interval',
            name='rep',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.Rep'),
        ),
        migrations.AddField(
            model_name='interval',
            name='swimmer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.Swimmer'),
        ),
        migrations.AddField(
            model_name='event',
            name='swimmer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='teams.Swimmer'),
        ),
        migrations.AddField(
            model_name='event',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='teams.Team'),
        ),
    ]
